#' RcppClock
#' 
#' Time Rcpp functions and summarize, print, and plot runtime statistics
#'
#' @rdname RcppClock
#' 
#' @section RcppClock functions:
#' TO DO
#' 
#' @docType package
#' @name RcpClock
#' @useDynLib RcppClock
#' @importFrom stats aggregate sd
#' @import ggplot2
NULL

#' @rdname RcppClock
#' @param x RcppClock object
#' @param units nanoseconds (\code{"ns"}), microseconds (\code{"us"}), milliseconds (\code{"ms"}), seconds (\code{"s"}), or auto (\code{"auto"})
#' @export
#' 
summary.RcppClock <- function(x, units = "auto"){
  min_time <- min(x$timer[x$timer != 0])
  if(is.na(min_time)) min_time <- 0
  if(units == "auto"){
    if(min_time > 1e9){
      units <- "s"
    } else if(min_time > 1e6){
      units <- "ms"
    } else if(min_time > 1e3){
      units <- "us"
    } else {
      units <- "ns"
    }
  }
  if(units == "s"){
    x$timer <- x$timer / 1e9
  } else if (units == "ms") {
    x$timer <- x$timer / 1e6
  } else if (units == "us") {
    x$timer <- x$timer / 1e3
  }
  
  # summarize results
  x <- data.frame("timer" = x$timer, "ticker" = x$ticker)
  df2 <- aggregate(timer~ticker, x, mean)
  colnames(df2)[2] <- "mean"
  df2$sd <- aggregate(timer~ticker, x, sd)$timer
  df2$min <- aggregate(timer~ticker, x, min)$timer
  df2$max <- aggregate(timer~ticker, x, max)$timer
  x$timer <- 1
  df2$neval <- aggregate(timer~ticker, x, sum)$timer

  long_units <- c("seconds", "milliseconds", "microseconds", "nanoseconds")
  short_units <- c("s", "ms", "us", "ns")
  attr(df2, "units") <- long_units[which(short_units == units)]
  df2
}

#' @method print RcppClock
#' @rdname RcppClock
#' @export
print.RcppClock <- function(x){
  df <- summary(x, units = "auto")
  cat("Unit:", attr(df, "units"), "\n")
  print(df, digits = 4, row.names = FALSE)
  invisible(x)
}

#' @export
#' @method plot RcppClock
#' @rdname RcppClock
plot.RcppClock <- function(x) {
  min_time <- min(x$timer[x$timer != 0])
  if(is.na(min_time)) min_time <- 0
  if(min_time > 1e9) {
    units <- "s"
    x$timer <- x$timer / 1e9
  } else if(min_time > 1e6) {
    units <- "ms"
    x$timer <- x$timer / 1e6
  } else if(min_time > 1e3) {
    units <- "us"
    x$timer <- x$timer / 1e3
  } else {
    units <- "ns"
  }

  long_units <- c("seconds", "milliseconds", "microseconds", "nanoseconds")
  short_units <- c("s", "ms", "us", "ns")

  df <- data.frame("timer" = x$timer, "ticker" = x$ticker)

  suppressWarnings(print(ggplot(df, aes(y = ticker, x = timer)) + 
    geom_violin() + 
    geom_jitter(height = 0.1) + 
    theme_classic() + 
    scale_x_continuous(trans = "log10") + 
    theme(axis.text.x = element_text(angle = 45, hjust = 1)) + 
    labs(y = "", x = paste0("runtime (", long_units[which(short_units == units)], ")"))))
}
